import { ClassStereotype, OntologicalNature, OntoumlElement, Classifier, Literal, ModelElement, Property, Relation } from '..';
export declare const ORDERLESS_LEVEL: number;
export declare class Class extends Classifier<Class, ClassStereotype> {
    restrictedTo: OntologicalNature[];
    literals: Literal[];
    isExtensional: boolean;
    isPowertype: boolean;
    order: number;
    constructor(base?: Partial<Class>);
    static parseOrder(orderString: string): number;
    getContents(): OntoumlElement[];
    getAllowedStereotypes(): ClassStereotype[];
    toJSON(): any;
    createAttribute(propertyType: Class, name?: string, base?: Partial<Property>): Property;
    createLiteral(name?: string, base?: Partial<Literal>): Literal;
    addAttribute(attribute: Property): void;
    addLiteral(literal: Literal): void;
    hasAttributes(): boolean;
    hasLiterals(): boolean;
    restrictedToOverlaps(natures: OntologicalNature | OntologicalNature[]): boolean;
    restrictedToContainedIn(natures: OntologicalNature | OntologicalNature[]): boolean;
    restrictedToContains(natures: OntologicalNature | OntologicalNature[]): boolean;
    restrictedToEquals(natures: OntologicalNature | OntologicalNature[]): boolean;
    isRestrictedToEndurant(): boolean;
    isRestrictedToSubstantial(): boolean;
    isRestrictedToMoment(): boolean;
    isRestrictedToFunctionalComplex(): boolean;
    isRestrictedToCollective(): boolean;
    isRestrictedToQuantity(): boolean;
    isRestrictedToIntrinsicMoment(): boolean;
    isRestrictedToExtrinsicMoment(): boolean;
    isRestrictedToRelator(): boolean;
    isRestrictedToIntrinsicMode(): boolean;
    isRestrictedToExtrinsicMode(): boolean;
    isRestrictedToQuality(): boolean;
    isRestrictedToEvent(): boolean;
    isRestrictedToSituation(): boolean;
    isRestrictedToType(): boolean;
    isRestrictedToAbstract(): boolean;
    hasTypeStereotype(): boolean;
    hasEventStereotype(): boolean;
    hasSituationStereotype(): boolean;
    hasAbstractStereotype(): boolean;
    hasDatatypeStereotype(): boolean;
    hasEnumerationStereotype(): boolean;
    isComplexDatatype(): boolean;
    isPrimitiveDatatype(): boolean;
    hasEndurantOnlyStereotype(): boolean;
    hasMomentOnlyStereotype(): boolean;
    hasSubstantialOnlyStereotype(): boolean;
    hasRigidStereotype(): boolean;
    hasSemiRigidStereotype(): boolean;
    hasAntiRigidStereotype(): boolean;
    hasNonSortalStereotype(): boolean;
    hasSortalStereotype(): boolean;
    hasUltimateSortalStereotype(): boolean;
    hasBaseSortalStereotype(): boolean;
    hasKindStereotype(): boolean;
    hasCollectiveStereotype(): boolean;
    hasQuantityStereotype(): boolean;
    hasRelatorStereotype(): boolean;
    hasQualityStereotype(): boolean;
    hasModeStereotype(): boolean;
    hasSubkindStereotype(): boolean;
    hasPhaseStereotype(): boolean;
    hasRoleStereotype(): boolean;
    hasHistoricalRoleStereotype(): boolean;
    hasCategoryStereotype(): boolean;
    hasPhaseMixinStereotype(): boolean;
    hasRoleMixinStereotype(): boolean;
    hasHistoricalRoleMixinStereotype(): boolean;
    hasMixinStereotype(): boolean;
    getUltimateSortalAncestors(): Class[];
    getUltimateSortalsDescendants(): Class[];
    getSortalAncestors(): Class[];
    getSortalDescendants(): Class[];
    getBaseSortalAncestors(): Class[];
    getBaseSortalDescendants(): Class[];
    getNonSortalAncestors(): Class[];
    getNonSortalDescendants(): Class[];
    getRigidAncestors(): Class[];
    getRigidDescendants(): Class[];
    getSemiRigidAncestors(): Class[];
    getSemiRigidDescendants(): Class[];
    getAntiRigidAncestors(): Class[];
    getAntiRigidDescendants(): Class[];
    getOwnAttributes(): Property[];
    getAllAttributes(): Property[];
    getOwnLiterals(): Literal[];
    getAllLiterals(): Literal[];
    clone(): Class;
    replace(originalElement: ModelElement, newElement: ModelElement): void;
    getUltimateSortalsInReach(): Class[];
    getOwnRelations(_filter?: Function): Relation[];
    static haveRigidStereotypes(classes: Class[]): boolean;
    static areAbstract(classes: Class[]): boolean;
}
